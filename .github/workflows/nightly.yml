---

# -------------------------------------------------------------------------------------------------
# Job Name
# -------------------------------------------------------------------------------------------------
name: nightly


# -------------------------------------------------------------------------------------------------
# When to run
# -------------------------------------------------------------------------------------------------
on:
  # Runs daily
  schedule:
    - cron: '0 0 * * *'

env:
  MATRIX_VERSION: '["8.0"]'
  MATRIX_ARCH: '["linux/amd64","linux/386","linux/arm64","linux/arm/v7","linux/arm/v6"]'


jobs:

  # -----------------------------------------------------------------------------------------------
  # Job (1/3): Configure Pipeline
  # -----------------------------------------------------------------------------------------------
  configure:
    name: Configure
    runs-on: ubuntu-latest
    outputs:
      matrix_version: ${{ steps.set-matrix-version.outputs.matrix_version }}
      matrix_arch: ${{ steps.set-matrix-arch.outputs.matrix_arch }}
      manifest_arch: ${{ steps.set-manifest-arch.outputs.manifest }}
    steps:

      - name: "[OUTPUT] Export Matrix 'Version'"
        id: set-matrix-version
        run: |
          echo '::set-output name=matrix_version::${{ env.MATRIX_VERSION }}'
          echo "${{ env.MATRIX_VERSION }}"

      - name: "[OUTPUT] Export Matrix 'Arch'"
        id: set-matrix-arch
        run: |
          echo '::set-output name=matrix_arch::${{ env.MATRIX_ARCH }}'
          echo "${{ env.MATRIX_ARCH }}"

      - name: "[OUTPUT] Export Manifest 'Arch'"
        id: set-manifest-arch
        run: |
          ARCH="$( echo ${{ env.MATRIX_ARCH }} | sed 's/"//g' | sed 's/\[//g' | sed 's/\]//g' | sed 's/ //g' )"
          echo "::set-output name=manifest::${ARCH}"
          echo "${ARCH}"


  # -----------------------------------------------------------------------------------------------
  # Job (2/3): BUILD
  # -----------------------------------------------------------------------------------------------
  build:
    needs: configure
    name: Build PHP-${{ matrix.version }} (${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version:
          - ${{ fromJson(needs.configure.outputs.matrix_version) }}
        arch:
          - ${{ fromJson(needs.configure.outputs.matrix_arch) }}
        refs:
          - 'master'
          - '0.15'
    steps:
      # ------------------------------------------------------------
      # Setup repository
      # ------------------------------------------------------------
      - name: "[SETUP] Checkout repository"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ matrix.refs }}

      - name: "[SETUP] Setup QEMU environment"
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: "[SETUP] Determine Docker tag"
        id: tag
        uses: cytopia/docker-tag-action@v0.4.13

      # ------------------------------------------------------------
      # Build
      # ------------------------------------------------------------
      - name: Build
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make build ARCH=${{ matrix.arch }}

      # ------------------------------------------------------------
      # Test
      # ------------------------------------------------------------
      - name: "[TEST] Docker Image"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make test ARCH=${{ matrix.arch }}

      - name: "[TEST] Update README"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make update-readme ARCH=${{ matrix.arch }}

      - name: "[TEST] Verify README"
        run: |
          git diff --quiet || { echo "Build Changes"; git diff; git status; false; }

      # ------------------------------------------------------------
      # Deploy
      # ------------------------------------------------------------
      - name: "[DEPLOY] Login"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: "[DEPLOY] Publish architecture image"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make push-arch TAG=${{ steps.tag.outputs.docker-tag }} ARCH=${{ matrix.arch }}

  # -----------------------------------------------------------------------------------------------
  # Job (3/3): DEPLOY
  # -----------------------------------------------------------------------------------------------
  deploy:
    needs: [configure, build]
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version:
          - ${{ fromJson(needs.configure.outputs.matrix_version) }}
        refs:
          - 'master'
          - '0.15'
    steps:
      # ------------------------------------------------------------
      # Setup repository
      # ------------------------------------------------------------
      - name: "[SETUP] Checkout repository"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ matrix.refs }}

      - name: "[SETUP] Determine Docker tag"
        id: tag
        uses: cytopia/docker-tag-action@v0.4.13

      # ------------------------------------------------------------
      # Deploy
      # ------------------------------------------------------------
      - name: "[DEPLOY] Login"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: "[DEPLOY] Create Docker manifest"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make manifest-create TAG=${{ steps.tag.outputs.docker-tag }} ARCH="${{ needs.configure.outputs.manifest_arch }}"

      - name: "[DEPLOY] Publish Docker manifest"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make manifest-push TAG=${{ steps.tag.outputs.docker-tag }}
